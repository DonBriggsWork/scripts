#!/bin/bash
#
# init_new
# By: Don! Briggs <donbriggswork@gmail.com>
#
# Install Don! Standard packages on new host

clear
printf "\n  INSTALLING DON! STANDARD PACKAGES\n"
printf "=============================================================\n\n"

printf "\n\n  -- Installing Utilities\n"
printf "=============================================================\n"
sudo apt install gparted -y
sudo apt install gnome-disk-utilities -y
sudo apt install gnome-disk-utility -y
sudo apt-get install -y openssh-server openssh-client
sudo apt-get install -y atop htop
sudo apt-get install -y curl
sudo apt install -y tldr

printf "\n\n  -- Installing Programs\n"
printf "=============================================================\n"
sudo apt install -y qbittorrent+


printf "\n\n  -- Installing Development Packages\n"
printf "=============================================================\n"
sudo apt install git -y
sudo apt-get install -y build-essential gcc
git config â€”global user-email "DonBriggsWork@gmail.com"
git config -- global user.name "Don Briggs"

printf "\n\n  -- Installing LAMP Suite"
printf "=============================================================\n"

sudo apt install php php-cgi php-cli
sudo apt install -y apache2
sudo apt install -y mariadb

# sudo ufw app list
# sudo ufw allow 'Apache'
# sudo ufw status
# sudo systemctl status apache2
# sudo systemctl status ufw
# sudo ufw status
# help ufw
# hostname -I
# clear
# hostname -I
# cd /var/www/
# ll
# sudo mkdir dev_local
# clear
# sudo chown -R $USER:$USER /var/www/dev_local/
# sudo chmod -R 755 /var/www/dev_local/
# cd dev_local/
# sudo nano index.html
# cd
# sudo nano /etc/apache2/sites-available/dev_local.conf
# sudo a2ensite dev_local.conf 
# sudo a2dissite 000-default.conf
# systemctl reload apache2
# sudo apache2ctl configtest
# sudo nano /etc/hosts
# ping dev.local
# sudo apt install mysql-server
# sudo mysql_secure_installation
# sudo apt update -y

# sudo atop
# clear
# sudo pkill chrome
# sudo mysql
# sudo apt install php libapache2-mod-php php-mysql
# php -v
# clear
# php -v
# pwd
# nano /var/www/dev_local/info.php
# sudo apt install -y composer
# clear
# apt list | grep php8.1
# sudo apt install php8.1-mbstring php8.1-xml php8.1-mysql php8,1-curl php8.1-zip
# sudo apt install php8.1-mbstring php8.1-xml php8.1-mysql php8.1-curl php8.1-zip
# composer
# cd /var/www/
# ll
# composer create-project laravel/laravel dev_local
# cd dev_local/
# ll
# sudo rm *.php *.html
# ll
# cd ..
# composer create-project laravel/laravel dev_local
# ll
# cd dev_local/
# ll
# artisan
# ./artisan 
# clear
# sudo nano /etc/apache2/sites-enabled/dev_local.conf 
# sudo systemctl apache2 reload
# sudo systemctl reload apache2
# ll
# cd storage/
# clear
# ll
# sudo cat /etc/passwd
# sudo cat /etc/passwd | grep www
# sudo usermo -a G dbriggs www-data
# sudo usermod -a G dbriggs www-data
# sudo usermod -a -G dbriggs www-data
# ll
# sudo usermod -a -G www-data dbriggs
# groups
# reboot
# php artisan
# cd /var/www/dev_local/
# ll
# ./artisan key:generate
# sudo apt install wget gpg -y
# wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
# sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
# clear
# sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
# ls /etc/apt/sources.list.d/
# rm -f packages.microsoft.gpg
# sydo apt update -y
# sudo apt update -y
# clear
# sudo apt install code -y
# ll
# sudo apt update -y && sudo apt upgrade
# clear
# curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
# unzip awscliv2.zip
# sudo ./aws/install
# sudo apt install -y curl
# curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
# unzip awscliv2.zip
# sudo ./aws/install
# aws --version
# ll
# clear
# aws configure
# aws ec2 describe-vpc
# aws ec2 describe-vpcs
# sudo apt update -y && sudo apt upgrade
# exit
# sudo apt update -y && sudo apt upgrade
# exti
# ll
# sudo apt update -y && sudo apt upgrade
# cd Downloads/
# ll
# sudo dpkg -i python3-tartube_2.4.093.deb 
# sudo apt install m-y perl python
# sudo apt install m-y perl python3
# sudo apt install -y perl python3
# sudo apt --fix-broken install
# sudo dpkg -i python3-tartube_2.4.093.deb 
# sudo apt update -y && sudo apt upgrade -y
# cd
# ll
# nano .profile 
# exit
# source .bashrc 
# ll
# l
# mv *.zip Dow
# ll
# l
# cd Dow
# rm Dow
# l
# clear
# l
# exit
# sudo apt update -y && sudo apt upgrade -y
# ll
# ls -l
# md Src
# mkdir Src
# clear
# ll
# ls -l
# l
# mv Src/ src/
# nano .profile 
# nano .bashrc 
# source .bashrc 
# l
# nano .bashrc 
# cd src
# git clone git@github.com:DonBriggsWork/bot.git
# ll
# cd bot
# git status
# reboot
# sudo apt update -y && sudo apt upgrade -y
# cd Downloads/you-tube/
# ll
# cd channel_1
# ll
# rm *.webp
# cd /etc/default/
# ll
# cd grub.d/
# ll
# sudo nano init-select.cfg 
# sudo nano /etc/default/grub.d/init-select.cfg 
# sudo mousepad /etc/NetworkManager/system-connections/wifi-hotspot
# sudo mousepad /etc/NetworkManager/system-connections/anarch
# cd /etc/NetworkManager/
# ll
# \cd system-connections/
# ll
# sudo mousepad WizardNet.nmconnection 
# clear
# ll
# clear
# nmcli dev wifi hotspot
# ll
# nmcli dev wifi show-password
# ip a
# update-pciids
# sudo update-pciids
# clear
# lsblk
# snapm list
# snap mlist
# snap list
# clear
# sudo systemctl disable snapd.service
# sudo systemctl disable snapd.socket
# sudo systemctl disable snapd.seeded.service
# clear
# snap list
# sudo snap remove firefox
# sudo snap remove snap-store
# sudo snap remove gtk-common-themes 
# clear
# snap list
# sudo snap remove bare
# sudo snap remove core20 
# sudo snap remove core20 gnome-3-38-2004 
# clear
# snap list
# sudo snap remove snapd
# sudo snap remove snapd\
# sudo snap remove gnome-3-38-2004 
# snap 
# sudo snap remove core20 
# snap listA
# sudo snap remove snapd 
# sudo rm -rf /var/cache/snapd/
# sudo apt remove --purge snapd 
# sudo rm -rf ~/snap
# lsus 
# lsusb 
# lspci
# clear
# lspci
# lsblk
# clear
# lsblk
# cd Downloads/
# ll
# clear
# lsblk
# ll
# clear
# ll
# dd if=kali-linux-2022-W47-live-amd64.iso of=/dev/sda bs=2048
# sudo dd if=kali-linux-2022-W47-live-amd64.iso of=/dev/sda bs=2048
# lsblk
# cd /home
# ll
# cd dbriggs/
# ll
# cd Documents/
# ll
# l
# clear
# l
# clear
# reboot
# ls -las
# df .
# cd .Trash-1000/
# ll
# cd files/
# ls -las
# cd dbriggs/
# ll
# cd Documents/
# ll
# cd Downloads/
# ll
# lsblk
# sudo dd if=kali-linux-2022.3-installer-amd64.iso of=/dev/sda bs=2048
# reboot
# ll
# rm *.torrent
# ll
# l
# clear
# l
# ll
# help cp
# cp
# cp --help
# clear
# ll
# sudo cp -av dbriggs_old/ /home/
# cd /home/
# ll
# sudo rm -rf dbriggs_old/
# exit
# cd /media/dbriggs/
# ll
# cd kali/
# ll
# sudo cp -av dbriggs_old/ /home/
# cd Downloads/
# ll
# sudo dbinst -i dropbox_2020.03.04_amd64.deb 
# sudo dbpkg -i dropbox_2020.03.04_amd64.deb 
# sudo dpkg -i dropbox_2020.03.04_amd64.deb 
# history | grep fix
# sudo apt --fix-broken install
# egrep -c '(vmx|svm)' /proc/cpuinfo
# rebooot
# reboot
# sudo mousepad /etc/fstab 
# reboot
# sudo apt install -y vlc
# egrep -c '(vmx|svm)' /proc/cpuinfo
# sudo apt install qemu-kvm qemu-system qemu-utils python3 python3-pip libvirt-clients libvirt-daemon-system bridge-utils virtinst libvirt-daemon virt-manager -y
# history | grep upgrade
# sudo apt update -y && sudo apt upgrade
# exit
# cd scripts/
# ll
# cd /home
# ll
# cd dbriggs_old/
# ll
# sudo systemctl status libvirtd.service
# sudo atop
# clear
# sudo htop
# sudo apt-get install -y htop
# path
# echo $PATH
# sudo htop
# sudo apt-get install -y bashtop
# sudo bashtop
# sudo apt-get install powertop
# sudo powertop
# exit
# cd scripts/
# ll
# sudo apt update -y && sudo apt upgrade
# man apt-secure
# exit
# sudo apt update -y && sudo apt upgrade
# clear
# setsh
# Netsh
# ll
# cd apt.conf.d/
# ll
# echo
# echo $PATH
# echo $APT_CONFIG
# cd ..
# ls -las'
# ls -las
# cd apt.conf.d
# ll
# cat 01autoremove 
# clear ;; ll
# clear && ll
# sudo nano 50command-not-found 
# exit
# cd /etc/apt/
# ll
# nano sources.list
# sudo nano sources.list
# ll
# cd sources.list.d/
# ll
# sudo nano dropbox.list 
# exit
# cat /etc/logrotate.q
# cd /etc/
# ll
# ll log
# ll log*
# ll --HELP
# ls --help\
# ls --help
# ll | grep log
# clear
# cat logrotate.conf 
# sudo nano logrotate.conf 
# clear
# ll | grep log
# cd logrotate.d/
# ll
# clear && ll
# cat apache2 
# clear && cat apache2 
# clear && sudo nano apache2 
# ll
# cd 
# cd /etc
# ll
# clear && ll grep http
# clear && ll | grep http
# clear && ll | grep apa
# cd apache2/
# ll
# clear && ll
# reboot
# shutdown
# sudo apt update -y && sudo apt upgrade
# clear
# sudo htop
# sudo pkill chrome
# reboot
# sudo apt remove qemu
# apt list --installed | grep qemu
# sudo apt remove qemu-system-*
# apt list --installed | grep qemu
# sudo apt remove qemu-utils
# apt list --installed | grep qemu
# sudo apt remove qemu-efi* -y
# apt list --installed | grep qemu
# sudo apt remove qemu-block-*
# sudo apt remove qemu-utils* -y
# apt list --installed | grep qemu
# exit
# which gedit
# sudo mousepad /etc/default/grub
# sudo grub-update
# cat /etc/default/grub
# sudo mousepad /etc/default/grub
# sudo ubdate-grub
# sudo update-grub
# reboot
# ll
# sudo su
# cd Downloads/
# ll
# sudo dd if=kali-linux-2022-W47-live-amd64.iso of=/dev/sda /bs=2048
# sudo dd if=kali-linux-2022-W47-live-amd64.iso of=/dev/sda bs=2048
# reboot
# sudo apt update -y
# sudo apt upgrade -y
# reboot
# sudo killall -d dropbox
# sudo killall -9 dropbox
# htop
# sudo apt update -y
# sudo apt upgrade -y
# ll
# aliases
# sudo apt update -y && sudo apt upgrade -y
# tldr
# sudo apt-get install -y tldr
# exit
# path
# ll
# scripts
# path
# path | grep script
# clear
# path
# tldr print
# path
# reboot
# sudo nano /etc/fstab 
# reboot
# path
# scripts
# remove_snaps
# path
# apt_upg 
# sudo gedit /etc/systemd/logind.con~
# sudo mousepad /etc/systemd/logind.con~
# find logind.conf
# sudo find -name logind.conf
# cd /etq
# cd /etc
# cd systemd/
# ll
# sudo mousepad logind.conf 
# systemd-analyze cat-config systemd/logind.conf
# lsb_release -a
# tldr lsb
# tldr lsb_release
# clear
# tldr lsb_release
# apt_upg 
# clear
# cd /etc/
# ll
# cd systemd/
# ll
# sudo cp logind.conf logind.dist
# clear
# sudo mousepad logind.conf 
# systemctl restart systemd-logind.service
# cd /home
# ll
# mount | grep home
# ll
# cd dbriggs
# ll'
# ll
# clear
# ls -las
# whoami
# sh <(curl -sSf https://downloads.nordcdn.com/apps/linux/install.sh)
# ll
# clear
# nordvpn connect
# usermod -aG nordvpn $USER
# sudo usermod -aG nordvpn $USER
# exit
# nordvpn connect
# nordvpn login
# reboot
# nordvpn login
# nordvpn status
# nordvpn connect
# nordvpn set dns 1.1.1.1 1.0.0.1
# reboot
# apt_upg 
# clear
# sudo apt-install -y cmatrix
# sudo apt install -y cmatrix
# man cmatrix
# cmatrix -ab
# cmatrix -ab&
# fg 1
# exit
# cmatrix -ab&
# fg 1
# cmatrix -ab
# man cmatrix
# cmatrix -abl
# htop
# tldr shutdown
# git config show
# git 
# git show
# ll
# cd src
# git show
# ll
# cd bot
# git show
# git -version
# git -v
# apt_upg 
# nordvpn status
# nordvpn connect
# apt_upg 
# clear
# tldr htop
# htop
# exit
# cd src
# ll
# sudo rm -rf bot/
# git clone git@github.com:DonBriggsWork/bot.git
# ll
# cd bot/
# git remote show
# cd src/
# git remote show
# nordvpn connect
# nordvpn status
# exit
# nmcli dev
# nmcli general status
# nmcli connection show --active
# cat ex
# nmcli device show | less
# clear
# nmcli device status
# nmcli device show wlp0s20f3
# nmcli connection show
# nmcli connection help
# nmcli connection delete SRM\ GUEST
# nmcli connection show
# clear
# nmcli connection show
# exit
# nmcli dev status
# sudo apt install -y iftop
# sudo apt install -y nload
# sudom iftop
# sudo iftop
# sudo apt install -y cbm
# apt_upg 
# cmatrix -ab
# iftop
# sudo iftop
# nload
# cbm
# nordvpn status
# nordvpn connect
# sudo poweroff
# sudo apt-get install -y fce4-sensors-plugin
# sudo iftop
# cd Downloads/
# ll
# sudo apt install -y libxfce4ui, libxfce4util, libgtk2.0-0, xfce4-panel, libxfce4ui-dev, libxfce4util-dev, libgtk2.0-dev, xfce4-panel-dev
# sudo apt install -y lmsensors
# sudo apt install -y hddtemp
# sudo apt install -y xnvctrl
# sudo apt install -y libgtk2.0-dev
# sudo apt install -y xfce4-panel-dev hddtemp netcat
# sudo apt install -y nvidia-utils/xnvctrl
# cd Downloads/
# cd xfce4-sensors-plugin-1.4.4/
# ./configure 
# apt_upg 
# ./configure 
# cd ll
# ll
# cd ..
# ll
# mv AmazonPhotos.zip ~/Archive/
# clear
# l
# lc
# cl
# alias
# aliases
# ll
# l
# clear
# ll
# sudo dpkg -i ./intltool_0.51.0-3_all.deb 
# nordvpn connect
# sudo apt install -y fslint
# sudo apt install fslint
# sudo apt install libgtk-4-dev ffmpeg
# scripts
# rm scripts/apha*
# rm scripts/alpha 
# pip3_upgrade.sh 
# exit
# which flatpack
# sudo apt install flatpak
# flatpak install flathub com.github.qarmin.czkawka
# flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
# reboot
# sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
# echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
# sudo apt update
# sudo apt install mono-complete
# apt_upg 
# exit
# cd Downloads/nbfc-master/
# ll
# ./build.sh 
# ll
# cd Linux/
# ll
# cd bin/
# ll
# cd  Release/
# ll
# cd ~/src/
# ll
# git clone https://github.com/hirschmann/nbfc.git
# ll
# cd nbfc/
# ll
# git checkkout beta
# git checkout beta
# ll
# ./build.sh 
# sudo mkdir /opt/nbfc
# clear
# sudo cp -r Linux/bin/Release/* /opt/nbfc/
# sudo cp Linux/{nbfc.service,nbfc-sleep.service} /etc/systemd/system/
# sudo systemctl enable nbfc --now
# cd /opt/nbfc/
# ll
# mono nbfc.exe config --apply "Config file name without extension"
# ll
# cd Configs/
# ll
# mono nbfc.exe config --apply "HP OMEN Notebook PC 15"
# cd ..
# mono nbfc.exe config --apply "HP OMEN Notebook PC 15"
# mono nbfc.exe start
# mono nbfc.exe status --all
# apt_upg 
# exit
# htop
# info -f grub -n 'Simple configuration'
# sudo su
# ifconfig
# ip a
# scripts
# aliases
# ll
# ls -la
# nano .bash_aliases 
# exit
# cd Downloads/
# ll
# mv amln-01.pem ~/.ssh/
# cd ~/.ssh/
# ll
# cat known_hosts
# lock_keys 
# cat known_hosts
# ll
# ssh -i "amln-01.pem" ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com
# ping ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com
# which ssh
# ssh -i "~/,ssh.amln-01.pem" ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com
# ping 54.236.27.218
# ssh -i "~/,ssh.amln-01.pem" ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com
# ll
# ssh -i "amln-01.pem" ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com
# cd
# ping ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com
# ping ec2-54-236-27-218.compute-1.amazonaws.com
# ssh -i "amln-01.pem" ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com
# ssh -i "~/.ssh/amln-01.pem" ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com
# nano .bash_aliases 
# reload
# nano .bash_aliases 
# reload
# nano .bash_aliases 
# reload
# amln
# aliases
# amln-01
# which sshfs
# sudo apt install sshfs
# which sshfs
# sshfs --help
# ping ec2-54-236-27-218.compute-1.amazonaws.com
# nano /etc/hosts
# aliases
# sshff ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com/home/ec2-user /remote
# sshfs ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com/home/ec2-user /remote
# sshfs ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com:home/ec2-user $HOME/remote
# sshfs -i "~/.ssh//amln-01.pem" ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com:home/ec2-user $HOME/remote
# sshfs -i "~/.ssh/amln-01.pem" ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com:home/ec2-user $HOME/remote
# sshfs ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com:home/ec2-user -i "~/.ssh/amln-01.pem" $HOME/remote
# sshfs ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com:home/ec2-user $HOME -i "~/.ssh/amln-01.pem"
# sshfs ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com:home/ec2-user $HOME -o IdentityFile="~/.ssh/amln-01.pem"
# sshfs ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com:home:/ec2-user remote -o IdentityFile="~/.ssh/amln-01.pem"
# sshfs ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com:/home:/ec2-user -o IdentityFile="~/.ssh/amln-01.pem"
# sshfs ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com:/home:/ec2-user remote -o IdentityFile="~/.ssh/amln-01.pem"
# sshfs ec2-user@ec2-54-236-27-218.compute-1.amazonaws.com:/home/ec2-user remote -o IdentityFile="~/.ssh/amln-01.pem"
# ll
# cd remote/
# ll
# ls -las
# amln-01
# reboot
# amln-01 
# ll
# lA
# la
# clear
# ll
# la
# cat .bashrc 
# ll
# la
# nano .bashrc 
# reload
# nano .profile 
# exit
# ll
# amln-01 
# cd /var/log/
# ll
# cd apache2/
# ll
# cat error.log
# clear
# cat error.log
# telnet localhost 80
# cd /var/www/html/
# ll
# telnet localhost 80
# cd /var/log/apache2/
# ll
# sudo rm *.gz
# ll
# clear
# telnet localhost 80
# ll
# cat access.log
# telnet localhost 80
# cat access.log
# cd
# telnet localhost 80
# GET /index.html HTTP/1.0
# ll /var/www/html/
# telnet localhost 80
# history
# clear
# telnet amln 80
# telnet amln-01 80
# amln-01 
# exit
# sudo rm -rfv /usr/local/bin/kismet* /usr/local/share/kismet* /usr/local/etc/kismet*
# wget -O - https://www.kismetwireless.net/repos/kismet-release.gpg.key | sudo apt-key add -
# echo 'deb https://www.kismetwireless.net/repos/apt/release/buster buster main' | sudo tee /etc/apt/sources.list.d/kismet.list
# sudo apt update
# sudo apt install kismet
# sudo apt install -y kismet
# sudo apt update
# sudo apt install -y kismet
# nordvpn connect
# aws
# aws help
# sudo shutdown
# sudo shutdown -n
# sudo powerdown
# sudo poweroff
# cat /etc/fstab 
# sudo fdisk -l
# sudo mousepad /etc/fstab 
# swap
# sudo su
# tldr systrmctl
# tldr systemctl
# systemctl
# systemctl | grep blue
# sudo systemctl status bluetooth
# sudo systemctl status bluetooth stop 
# sudo systemctl disable bluetooth
# sudo systemctl stop bluetooth
# apt_upg 
# clear
# aliases
# scripts
# rm scripts/pip_upgrade.sh 
# htop
# sudo apt install -y bashtop
# bashtop
# htop
# clear
# systemctl status
# systemctl status | grep dropbox
# systemctl stop dropbox
# sudo systemctl stop dropbox
# sudo systemctl disable dropbox
# sudo systemctl disable dropbox@dbriggs
# sudo systemctl disable dropbox.service
# sudo systemctl 
# sudo su
# lsusb
# lsblk
# ll
# sudo dd if=kali-linux-2022.4-live-everything-amd64.iso of=/dev/sda bs=2048
# reboot
# cd src/
# ll
# git clone git@github.com:DonBriggsWork/ansible-config.git
# sudo dd if=kali-linux-2023-W05-installer-amd64.iso of=/dev/sda bs=2024
# cmatrix -ah
# cmatrix -ab
# htop
# poweroff
# apt_upg 
# history | grep blue
# sudo systemctl disable bluetooth
# sudo systemctl enable bluetooth
# sudo systemctl start bluetooth
# apt_upg
# apt_upg 
# reboot
# apt_upg 
# sudo apt install -y qwmu-kvm libvirt-clients libvirt-daemon-system bridge-utils
# sudo apt install -y qemu-kvm libvirt-clients libvirt-daemon-system bridge-utils
# sudo adduser dbriggs libvirt
# sudo adduser dbriggs kvm
# sudo apt install -y virtmanager
# sudo apt install -y virt-manager
# nordvpn connect
# nordvpn login
# nordvpn connect
# python3 -m pip install --upgrade pip
# nordvpn disconnect
# sudo apt install -y qemu
# sudo apt list | grep qemu
# sudo apt list --installed | grep qemu
# sudo apt install -y qemu
# apt_upg 
# sudo apt install -y qemu
# cd Downloads/
# ll
# mv * .iso Images/
# mv *.iso Images/
# ll
# cd Images/
# ll
# mv *.deb ..
# mv *.bz2 ..
# ll
# nordvpn connect
# !
# history | grep qemu
# qemu
# which qemu
# exit
# cd .ssh/'
# cd .ssh/
# ll
# tldr ssh-keygen
# clear
# tldr ssh-keygen
# ssh-keygen
# clear
# ll
# sudo rm known_hosts
# sudo apt in stall -y xclip
# sudo apt install -y xclip
# tlds xclip
# xclip --help
# which xclip
# man xclip
# cd .ssh/
# ll
# xclip id_ed25519.pub 
# cd
# ssh -t Wizard1776@lish-us-central.linode.com ubs01
# powerdown
# shutdown
# ssh -t Wizard1776@lish-us-west.linode.com ubuntu-test-01
# tldr adduser
# tldr useradd
# pwd
# ssh -i .ssh/id_ed25519 dbriggs@45.79.226.134
# ssh root@45.79.226.134
# tldr ssh
# clear
# tldr ssh
# ll .ssh/
# ssh -i .ssh/id_ed25519 root@45.79.226.134
# clear
# ssh -i .ssh/id_ed25519 root@45.79.226.134
# clear
# pwd
# ssh -i .ssh/id_ed25519 dbriggs@45.79.226.134
# reboot
# ssh -i .ssh/id_ed25519 dbriggs@45.79.226.134
# ping test-01
# cat /etc/hosts
# ssh -i .ssh/id_ed25519 dbriggs@45.79.226.134
# sudo nano /etc/hosts
# pint test-01
# ping test-01
# ssh test-01
# clear
# sudo nano /etc/hosts
# rewboot
# reboot
# ping test01
# ping localhost
# clear
# ssh root@45.79.226.134
# sudo systemctl
# clear
# sudo systemctl  | grep blue
# sudo systemctl restart bluetooth
# sudo systemctl stop bluetooth
# sudo systemctl  | grep blue
# sudo systemctl stop bluetooth.target
# sudo systemctl  | grep blue
# sudo systemctl start bluetooth.target
# sudo systemctl start bluetooth
# ssh root@45.79.226.134
# reboot
# sudo apt update
# sudo apt dist-upgrade
# ssh root@45.79.226.134
# sudo apt install -y unattended-upgradrs
# apt list | grep unatt
# sudo dpkg-reconfigure --priority=low unattended-upgrades
# which dig
# sudo nano /etc/ssh/ssh_config
# history | grep dbriggs
# ssh -i .ssh/id_ed25519 dbriggs@45.79.226.134
# tldr useradd
# ls -h
# ls -lh
# clear
# tldr useradd
# clear
# tldr adduser
# ssh root@143.42.166.213
# ll
# ls -las
# ssh root@143.42.166.213
# history | grep ssh
# cd .ssh
# ll
# history | grep .pub
# history | grep pub
# clear
# ls -las
# ssh -i .ssh/id_ed25519 dbriggs@45.79.226.134
# cd ..
# ssh -i .ssh/id_ed25519 dbriggs@45.79.226.134
# ssh root@143.42.166.213
# ssh dbriggs@143.42.166.213
# ssh root@143.42.166.213
# clear
# ssh root@143.42.166.213
# ssh dbriggs@143.42.166.213
# ssh root@143.42.166.213
# ssh dbriggs@143.42.166.213
# ssh 143.42.166.213
# ssh wizard@143.42.166.213
# ssh dbriggs@143.42.166.213
# ssh root@143.42.166.213
# history | grep blue
# systemctl restart bluetooth
# ssh root@139.144.41.143
# pwd
# ssh root@139.144.41.143
# clear
# ssh root@139.144.41.143
# history | grep blue
# systemctl bluetooth.target
# systemctl restart bluetooth.target
# systemctl restart bluetooth.service
# ssh root@143.42.166.213
# ssh root@139.144.41.143
# ssh dbriggs@139.144.41.143
# ssh root@139.144.41.143
# shutdown
# ssh root@139.144.41.143
# ssh dbriggs@139.144.41.143
# clear
# ll .sshg
# ll .ssh
# ll
# pwd
# ssh-copy-id ~/.ssh/id_25519.pub dbriggs@174.51.68.123
# ssh-copy-id -i ~/.ssh/id_25519.pub dbriggs@174.51.68.123
# ssh-copy-id -i ~/.ssh/id_ed25519.pub dbriggs@174.51.68.123
# ssh-copy-id -i ~/.ssh/id_ed25519.pub wizard@174.51.68.123
# clear
# ssh-copy-id -i ~/.ssh/id_ed25519.pub wizard@174.51.68.123
# ssh root@139.144.41.143
# ssh wizard@139.144.41.143
# ssh dbriggs@139.144.41.143
# ssh root@139.144.41.143
# ssh dbriggs@139.144.41.143
# ssh root@139.144.41.143
# clear
# ssh r@139.144.41.143 
# clear
# ssh root@139.144.41.143
# ssh wizard@139.144.41.143 
# ssh root@139.144.41.143
# ssh wizard@139.144.41.143
# cat /etc/hosts
# sudo nano /etc/hosts
# ping test01
# ssh wizard@test01
# cmatrix -ab
# history | grep blue
# systemctl restart bluetooth.target
# systemctl restart bluetooth.service
# cmatrix -ab
# apt_upg&
# apt_upg
# exit
# ssh test01
# ssh wizard@test01
# cmatrix -ab
# tldr ss
# cmatrix -ab
# systemctl restart bluetooth.target
# systemctl restart bluetooth.service
# tldr cp
# ll
# cd archive/
# ll
# sudo rm -rf *
# ll
# mkdir dbriggs
# cp --help
# systemctl restart bluetooth.target
# systemctl restart bluetooth.service
# systemctl restart bluetooth.target
# systemctl restart bluetooth.service
# sudo cp -arv /home/dbriggs/ /media/dbriggs/archive/
# clear
# sudo cp -arv /home/dbriggs/ /media/dbriggs/archive/
# cd /media/dbriggs/
# ll
# cd archive/
# ll
# cd dbriggs/
# ll
# clear
# cp --help
# reboot
# df -h .
# pip3 install linode-cli --upgrade
# pip3 install boto --upgrade
# which linode-cli
# sudo find / -name linode-cli
# sudo rm -rf /home/dbriggs_old/.local/bin/linode*
# sudo find / -name linode-cli
# nano .profile 
# ll
# pwd
# ls -a
# ll -a
# nano .bashrc 
# which pip
# sudo apt install -y python3-pip
# sudo find / -name linode-cli
# which linode-cli
# linode-cli
# history | grep blue
# systemctl restart bluetooth.target
# systemctl restart bluetooth.service
# linode-cli
# linode-cli obj
# linode-cli obj ls
# linode-cli obj ls 3
# linode-cli obj ls
# linode-cli obj ls --help
# linode-cli --help
# linode-cli regions --help
# linode-cli regions ls
# linode-cli regions view
# linode-cli regions view us-southeeast
# linode-cli regions view us-southeast
# linode-cli regions view us-southeast obj
# linode-cli regions view us-southeast --help
# linode-cli obj ls us-southeast
# linode-cli obj ls us-southeast-1
# linode-cli --help
# linode-cli configure --help
# linode-cli configure
# linode-cli obj la
# linode-cli obj la us-east
# linode-cli obj la -h
# linode-cli obj -h
# linode-cli configure --help
# linode-cli obj mb dbriggs-test2
# linode-cli configure --help
# linode-cli obj ls us-useast
# linode-cli obj ls useast
# linode-cli obj du
# linode-cli 
# linode-cli obj
# sudo apt remove -p linode-cli
# sudo apt remove -purge linode-cli
# linode-cli linodes list
# linode-cli regions list
# sudo apt install -y 
# linode-cli configure
# clear
# linode-cli object-storage clusters-list
# linode-cli volumes list
# linode-cli object-storage clusters-list
# linode-cli object-storage ssl-view us-east-1 
# linode-cli object-storage us-east-1 la
# linode-cli object-storage la us-east-1
# linode-cli object-storage la --help
# linode-cli obj --help
# linode-cli obj du --help
# linode-cli obj la --help
# pip3
# pip3 list
# pip3 help remove
# pip3 remove --help
# pip3 uninstall --help
# pip3 list | grep linode
# pip3 uninstall linode-cli
# pip3 install linode-cli
# linode-cli
# history | grep configure
# linode-cli configure
# linode-cli object-storage clusters-list
# history | grep blue
# nano scripts/blue
# chmod +x scripts/blue 
# blue
# CD .ssh/
# ll
# cdv .ssh
# cd .ssh
# ll
# which xclip
# xclip id_ed25519.pub 
# clear
# ll
# cat id_ed25519.pub | xclip -i
# ssh wizard@test01
# cat id_ed25519.pub
# cd .ssh
# cat id_ed25519.pub
# cat id_ed25519.pub | xclip -i
# nano scripts/blue 
# blue
# ssh dbriggs@test01
# apt_upg 
# exit
# cmatrix -ab
# reboot
# nordvpn connect
# mkdir nisha
# cd nisha/
# mkdir blue
# ll
# rmdir blue
# mkdir kali_usb
# cd kali_usb/
# ll
# apt-get install gcc libsdl1.2-dev zlib1g-dev libasound2-dev linux-kernel-headers pkg-config libgnutls-dev libpci-dev
# sudo apt-get install gcc libsdl1.2-dev zlib1g-dev libasound2-dev linux-kernel-headers pkg-config libgnutls-dev libpci-dev
# sudo mousepad /etc/apt/sources.list
# sudo apt update -y
# sudo apt-get install gcc libsdl1.2-dev zlib1g-dev libasound2-dev linux-kernel-headers pkg-config libgnutls-dev libpci-dev
# clear
# sudo apt-get install gcc libsdl1.2-dev zlib1g-dev libasound2-dev linux-kernel-headers pkg-config libgnutls-dev libpci-dev
# sudo mousepad /etc/fstab 
# sudo apt install qemu-kvm libvirt-clients libvirt-daemon-system bridge-utils virt-manager
# df -h .
# lsb_release -a
# sudo apt install -y samba
# systemctl status smbd
# systemctl stop smbd
# cd /etc/samba/
# ll
# sudo cp smb.conf smb.dist
# ll
# cat gdbcommands 
# sudo mousepad smb.conf 
# sudo mousepad /etc/samba/shares.conf
# sudo groupadd --system smbgroup
# sudo useradd --system --no-create-home --group smbgroup -s /bin/false smbuser
# sudo mkdir -p /share/public_files
# sudo mkdir /share/private_files
# sudo chown -R smbuser:smbgroup /share
# sudo chmod -R g+w /share
# sudo mousepad smb.conf 
# systemctl start smbd
# find . -name WebData-working
# ping test01
# ssh test01
# sudo apt install qemu-system-x86
# ssh test01
# sudo apt install qemu-system-x86
# ssh root@139.144.39.39
# ssh dbriggs@139.144.39.39
# sudo nano /etc/hosts
# apt_upg 
# reboot
# apt_upg 
# cat gdbcommands 
# exit
# ll
# sudo chown -r dbriggs:dbriggs 
# ll
# cd ..
# sudo chown -r dbriggs:dbriggs .
# sudo chown -r . dbriggs:dbriggs
# tldr chown
# sudo chown -r dbriggs:dbriggs .
# sudo chown -r dbriggs:dbriggs ./archive/
# sudo chown -R dbriggs:dbriggs ./archive/
# ll
# sudo chown -R dbriggs:dbriggs ./nork/
# history | grep cmatrix
# cmatrix -ab
# atop
# sudo atop
# cd /run/systemd/system/
# ll
# cat netplan-ovs-cleanup.service 
# reboot
# cmatrix -ab
# nordvpn login
# nordvpn connect
# nordvpn status
# exit
# sudo nano /etc/apt/sources.list
# ll
# cd /etc/apt/
# ll
# cp sources.list sources.bak
# sudo cp sources.list sources.bak
# ll
# sudo apt install -y xscreensaver-data xscreensa
# sudo apt update
# sudo apt upgrade
# sudo apt upgrade --fix-missing
# clear
# sudo apt upgrade --fix-missing
# exit
# which ventoy
# lsblk
# ll
# cd projects/
# ll
# git clone https://github.com/ventoy/Ventoy.git
# sudo su
# lsblk
# dd if=kali-linux-2022.4-live-everything-amd64.iso of=/dev/sdb
# sudo dd if=kali-linux-2022.4-live-everything-amd64.iso of=/dev/sdb
# ll
# htop
# sudo pkill chrome
# htop
# lsblk
# ll
# cd Downloads
# ll
# cd Images/
# ll
# sudo dd if=ubuntu-23.04-desktop-amd64.iso of=/dev/sdb bs=2048
# reboot
# sudo apt-get update -y
# sudo apt-get upgrade -y
# mount
# sudo add-apt-reposi[2~tor
# sudo add-apt-repository ppa:danielrichter
# sudo add-apt-repository ppa:danielrichter2007/grub-customizer
# sudo apt-get update -y
# sudo apt-get install -y grub-customizer
# exit
# sudo apt-add-repository 'https://ppa.launchpadcontent.net/fish-shell/rele

# 3/
# sudo apt-add-repository 'https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu lunar main'
# sudo apt-get update -y
# sudo mousepad /etc/apt/sources.list
# cd
# nano .bash
# ll
# cd scripts/
# ll
# cd
# sudo nano /etc/hosts
# ping gitlab
# reload
# exit
# cd .ssh
# ll
# path
# aliases
# l
# ll
# sudo rm *.pub *.old *.pem
# ll
# sudo rm id_ed25519 
# sudo mkdir Backup
# ll
# sudo mv known_hosts Backup/
# ll
# aliases
# sudo cp ~/Downloads/aws01.pem .
# ll
# lock_keys 
# sudo lock_keys 
# reload

# cd
# gitlab
# reload
# clear
# reload
# pwd
# ssh -i "aws01.pem" root@ec2-3-82-147-153.compute-1.amazonaws.com
# ssh -i "~/.ssh/aws01.pem" root@ec2-3-82-147-153.compute-1.amazonaws.com
# ssh -i "~/.ssh/aws01.pem" ec2-user@gitlab 
# ssh -i "~/.ssh/aws01.pem" ec2-user@gitlab reload
# reload
# al
# reload
# hosts
# reload
# hosts
# source .profile
# hosts
# al
# reload
# al
# reload
# aws
#